config:
  project_type: laravel                   # don't edit this
  source_basepath: ./                     # base path for the files to upload 
  target_basepath: /www/wwwroot/mysite    # required, (full) absolute path!
  host: ${env.FTP_SERVER}                 # you can use ${env.*} or the plain value directly here
  ftp:
    username: ${env.FTP_USERNAME}
    password: ${env.FTP_PASSWORD}
    base_path: /www/wwwroot
  ssh:
    username: ${env.SSH_USERNAME}
    password: ${env.SSH_PASSWORD}

  # for printing "files to upload". files inside these dirs, won't be printed, instead "dir/*"
  dist_dirs:
    - public/build
    - vendor/composer
    - storage/framework/cache
    - storage/framework/views
    - storage/framework/sessions

  ignores:
    #no need after first deploy
    - /vendor
    - /bootstrap/cache
    - .gitignore

    #folders
    - node_modules
    - /database
    - /tests
    - /example
    - /resources/js
    - /resources/css
    - /resources/sass
    - /resources/sass
    - /resources/svg
    - /resources/markdown
    - /lang
    - /storage/debugbar

    #files
    - /.*
    - /*.*
    - public/hot
    - .DS_Store
    - laravel.log

steps:
  - shell:
      command: php artisan route:cache;
      message: blue|\n-> $command
      ignore_stdout: true
  - shell:
      command: php artisan cache:clear;
      message: blue|\n-> $command
      ignore_stdout: true
  - shell:
      command: php artisan config:clear;
      message: blue|\n-> $command
      ignore_stdout: true
  - shell:
      command: php artisan view:clear;
      message: blue|\n-> $command
      ignore_stdout: true
  - shell:
      command: php artisan optimize:clear;
      message: blue|\n-> $command
      ignore_stdout: true
  - shell:
      command: php artisan debugbar:clear;
      message: blue|\n-> $command
      ignore_stdout: true
      ignore_error: true
  - shell:
      command: rm -r public/build;
      message: blue|\n-> Deleting dist on local machine
      ignore_stdout: true
  - shell:
      command: npm run build || exit 2;
      message: blue|\n-> npm run build
      ignore_error: true
      ignore_stdout: true
  # - log: I am a log
  # - log: 
  #     message: I am an object log

  - predefined: server:find_new_files
  - predefined: local:exit_if_dry_run
  - shell:
      ssh: true
      command: rm public/hot;
      message: blue|\n-> Deleting "public/hot" file on server
      ignore_error: true
  - shell:
      ssh: true
      command: rm -r public/build/assets/*;
      message: blue|\n-> Deleting old auto-generated vue&js files on server
  - predefined: server:upload_files
  - predefined: server:unzip
  - predefined: server:delete_zip
  - shell:
      ssh: true
      command: export COMPOSER_ALLOW_SUPERUSER=1 && composer install --optimize-autoloader --no-interaction --no-dev --prefer-dist
      message: blue|\n-> composer install non-dev dependecies
      ignore_stdout: true
      ignore_error: true
  - shell:
      ssh: true
      command: php artisan optimize:clear && php artisan view:cache;
      message: blue|\n-> $command on server
  - shell:
      command: php artisan optimize:clear;
      message: blue|\n-> $command
      ignore_stdout: true
  - predefined: local:dispose_ssh
  - predefined: local:finish
