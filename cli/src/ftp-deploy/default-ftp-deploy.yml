config:
  host: $SERVER$
  target_basepath: $TARGET_BASEPATH$
  ftp:
    username: $FTP_USERNAME$
    password: $FTP_PASSWORD$
  ssh:
    username: $SSH_USERNAME$
    password: $SSH_PASSWORD$

  # possible values: always, if_ssh
  zip: if_ssh

  # for printing "files to upload". files inside these dirs, won't be printed, instead "dir/*"
  dist_dirs:
    - public/build

  ignores:
    #no need after first deploy
    - /vendor
    - /bootstrap/cache
    - .gitignore

    #folders
    - node_modules
    - /database
    - /tests
    - /example
    - /resources/js
    - /resources/css
    - /resources/sass
    - /resources/sass
    - /resources/svg
    - /resources/markdown
    - /lang
    - /storage/debugbar
    - /storage/deployer

    #files
    - /.*
    - /*.*
    - public/hot
    - .DS_Store
    - laravel.log

steps: 
  local:
    # - shell:
    #     command: php artisan route:cache;
    #     message: blue|\n-> $command
    #     ignore_stdout: true
    # - shell:
    #     command: php artisan cache:clear;
    #     message: blue|\n-> $command
    #     ignore_stdout: true
    # - shell:
    #     command: php artisan config:clear;
    #     message: blue|\n-> $command
    #     ignore_stdout: true
    # - shell:
    #     command: php artisan view:clear;
    #     message: blue|\n-> $command
    #     ignore_stdout: true
    # - shell:
    #     command: php artisan optimize:clear;
    #     message: blue|\n-> $command
    #     ignore_stdout: true
    # - shell:
    #     command: php artisan debugbar:clear;
    #     message: blue|\n-> $command
    #     ignore_stdout: true
    - shell:
        command: rm -r public/build;
        message: blue|\n-> Deleting dist on local machine
        ignore_stdout: true
    - shell:
        command: npm run build || exit 2;
        message: blue|\n-> npm run build
        ignore_error: true
        ignore_stdout: true
    - log: 

    - predefined: local:prepare_deployer
    - predefined: local:find_new_files
    - predefined: local:copy_files_to_deployer
    - predefined: local:check_dry_run
    - predefined: local:save_deployer_status_tmp

  server:
      - predefined: server:delete_dist_dirs
      - ssh_shell:
          command: rm {0}/public/hot;
          args: [ $config.target_basepath ]
          message: blue|\n-> Deleting "public/hot" file on server
          ignore_error: true
      - predefined: local:upload_files
      - predefined: server:unzip
      - predefined: server:delete_zip
      - predefined: local:dispose_ssh
      - predefined: local:finish